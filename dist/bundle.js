/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/GA/Individual.js":
/*!*******************************!*\
  !*** ./dist/GA/Individual.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Individual\": () => (/* binding */ Individual)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n * Abstract class used to generate, store and cross DNA.\n * All its method must be implemented in child class.\n */\nvar Individual = /*#__PURE__*/_createClass(function Individual(size) {\n  _classCallCheck(this, Individual);\n  this.size = size;\n  this.genes = [];\n});\n\n//# sourceURL=webpack://genetic-algorithm/./dist/GA/Individual.js?");

/***/ }),

/***/ "./dist/GA/Population.js":
/*!*******************************!*\
  !*** ./dist/GA/Population.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Population\": () => (/* binding */ Population)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * Abstract class used to create, store and evolve individuals\n */\nvar Population = /*#__PURE__*/function () {\n  /**\n   * Creates a new population\n   * @param individualCount Number of individuals in the population\n   * @param individualSize  Number of genes for each individual\n   * @param IndividualClass Individual class\n   */\n  function Population(individualCount, individualSize, IndividualClass) {\n    _classCallCheck(this, Population);\n    this.individuals = [];\n    this.individualCount = individualCount;\n    this.individualSize = individualSize;\n    this.averageFitness = 0;\n    this.IndividualClass = IndividualClass;\n  }\n  /**\n   * Randomly creates the population's first generation\n   * @returns array of individuals\n   */\n  _createClass(Population, [{\n    key: \"spawn\",\n    value: function spawn() {\n      for (var i = 0; i < this.individualCount; i++) {\n        var individual = new this.IndividualClass(this.individualSize);\n        individual.random();\n        this.individuals[i] = individual;\n      }\n      return this.individuals;\n    }\n    /**\n     * Picks an individual from population according to the individuals probability\n     * @returns picked individual\n     */\n  }, {\n    key: \"pick\",\n    value: function pick() {\n      var random = Math.random();\n      for (var j = 0; j < this.individualCount; j++) {\n        if (this.individuals[j].probability > random) {\n          return this.individuals[j];\n        }\n      }\n    }\n    /**\n     * Selects individuals for mating according to their fitness\n     * @param count number of couples to select\n     * @returns array of paired individuals\n     */\n  }, {\n    key: \"select\",\n    value: function select(count) {\n      var selected = [];\n      // Cumputes sum of all individuals' fitness\n      var fitnessSum = this.individuals.reduce(function (acc, curr) {\n        return acc + curr.fitness;\n      }, 0);\n      // Computes inverse proportions for each individual\n      this.individuals.forEach(function (individual) {\n        individual.probability = fitnessSum / individual.fitness;\n      });\n      // Computes sum of all individuals' probability\n      var propabilitySum = this.individuals.reduce(function (acc, curr) {\n        return acc + curr.probability;\n      }, 0);\n      // Normalizes probabilities\n      this.individuals.forEach(function (individual) {\n        individual.probability /= propabilitySum;\n      });\n      // Computes cumulative probabilities\n      var cumulativeProbability = 0;\n      this.individuals.forEach(function (individual) {\n        cumulativeProbability += individual.probability;\n        individual.probability = cumulativeProbability;\n      });\n      // Initializes parents for mating\n      var parent1, parent2;\n      // Applies random biased selection wheel\n      for (var i = 0; i < count; i++) {\n        parent1 = this.pick();\n        parent2 = parent1;\n        while (parent1 === parent2) {\n          parent2 = this.pick();\n        }\n        selected.push([parent1, parent2]);\n      }\n      return selected;\n    }\n    /**\n     * Crosses over individual to create new offspring\n     * @returns individuals after crossing over\n     */\n  }, {\n    key: \"crossover\",\n    value: function crossover() {\n      var offspring = [];\n      // Two mates will create two individual so we need a selection\n      // that is half the length of the population\n      var parents = this.select(Math.ceil(this.individualCount / 2));\n      for (var i = 0; i < parents.length; i++) {\n        var child1 = new this.IndividualClass(this.individualSize);\n        var child2 = new this.IndividualClass(this.individualSize);\n        var _parents$i = _slicedToArray(parents[i], 2),\n          parent1 = _parents$i[0],\n          parent2 = _parents$i[1];\n        // Sets offspring genes\n        var _parent1$crossover = parent1.crossover(parent2);\n        var _parent1$crossover2 = _slicedToArray(_parent1$crossover, 2);\n        child1.genes = _parent1$crossover2[0];\n        child2.genes = _parent1$crossover2[1];\n        offspring.push(child1, child2);\n      }\n      return offspring;\n    }\n    /**\n     * Wrapper function that creates a new generation\n     * @returns all individuals from population\n     */\n  }, {\n    key: \"generate\",\n    value: function generate() {\n      var _this$individuals;\n      // Computes individuals' fitness\n      this.evaluate();\n      // Creates offspring and add them to the population\n      var offspring = this.crossover();\n      (_this$individuals = this.individuals).push.apply(_this$individuals, _toConsumableArray(offspring));\n      // Evaluates population including offspring\n      this.evaluate();\n      // Remove less fit individuals\n      this.cull();\n      // Mutate survivors\n      this.mutate();\n      return this.individuals;\n    }\n  }]);\n  return Population;\n}();\n\n//# sourceURL=webpack://genetic-algorithm/./dist/GA/Population.js?");

/***/ }),

/***/ "./dist/GA/index.js":
/*!**************************!*\
  !*** ./dist/GA/index.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Individual\": () => (/* reexport safe */ _Individual__WEBPACK_IMPORTED_MODULE_0__.Individual),\n/* harmony export */   \"Population\": () => (/* reexport safe */ _Population__WEBPACK_IMPORTED_MODULE_1__.Population)\n/* harmony export */ });\n/* harmony import */ var _Individual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Individual */ \"./dist/GA/Individual.js\");\n/* harmony import */ var _Population__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Population */ \"./dist/GA/Population.js\");\n\n\n\n//# sourceURL=webpack://genetic-algorithm/./dist/GA/index.js?");

/***/ }),

/***/ "./dist/TravellingSalesman/App.js":
/*!****************************************!*\
  !*** ./dist/TravellingSalesman/App.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"App\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var _PopulationTS__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PopulationTS */ \"./dist/TravellingSalesman/PopulationTS.js\");\n/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Renderer */ \"./dist/TravellingSalesman/Renderer.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nvar App = /*#__PURE__*/function () {\n  function App(canvasID, cityCount) {\n    _classCallCheck(this, App);\n    this.renderer = new _Renderer__WEBPACK_IMPORTED_MODULE_1__.Renderer(canvasID);\n    this.cityCount = cityCount;\n  }\n  /** Initializes application, creating cities and population */\n  _createClass(App, [{\n    key: \"init\",\n    value: function init() {\n      this.createCities();\n      this.createPopulation();\n    }\n    /** Creates cities with random coordinates in canvas limits */\n  }, {\n    key: \"createCities\",\n    value: function createCities() {\n      this.cities = [];\n      for (var i = 0; i < 20; i++) {\n        this.cities.push([Math.floor(Math.random() * this.renderer.canvas.width), Math.floor(Math.random() * this.renderer.canvas.height)]);\n      }\n    }\n    /** Creates and spawn a population, hardcoded to 750 individuals */\n  }, {\n    key: \"createPopulation\",\n    value: function createPopulation() {\n      this.population = new _PopulationTS__WEBPACK_IMPORTED_MODULE_0__.PopulationTS(750, this.cities);\n      this.population.spawn();\n    }\n    /**\n     * Converts an individual genome to a list of cities to link with lines\n     * @param individual Individual to convert to a city pairs array\n     * @returns city pairs array\n     */\n  }, {\n    key: \"individualToCityArray\",\n    value: function individualToCityArray(individual) {\n      var citiesCoords = [];\n      for (var i = 1; i < individual.size; i++) {\n        citiesCoords.push([].concat(_toConsumableArray(this.cities[individual.genes[i]]), _toConsumableArray(this.cities[individual.genes[i - 1]])));\n      }\n      citiesCoords.push([].concat(_toConsumableArray(this.cities[individual.genes[0]]), _toConsumableArray(this.cities[individual.genes[individual.size - 1]])));\n      return citiesCoords;\n    }\n    /** Evolves the population and render new generation */\n  }, {\n    key: \"update\",\n    value: function update() {\n      console.log(this.population);\n      this.population.generate();\n      this.renderer.clear();\n      var genes = [];\n      for (var j = 0; j < this.population.individualCount; j++) {\n        var individual = this.population.individuals[j];\n        genes.push.apply(genes, _toConsumableArray(this.individualToCityArray(individual)));\n      }\n      this.renderer.drawGenes(genes);\n      var best = this.population.individuals.sort(function (a, b) {\n        return b.fitness - a.fitness;\n      })[0];\n      var bestGenes = this.individualToCityArray(best);\n      this.renderer.drawFittest(bestGenes);\n      this.renderer.drawCities(this.cities);\n    }\n    /** Updates population and render it every 250ms */\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this = this;\n      this.init();\n      window.setInterval(function (_) {\n        return _this.update();\n      }, 250);\n    }\n  }]);\n  return App;\n}();\n\n//# sourceURL=webpack://genetic-algorithm/./dist/TravellingSalesman/App.js?");

/***/ }),

/***/ "./dist/TravellingSalesman/IndividualTS.js":
/*!*************************************************!*\
  !*** ./dist/TravellingSalesman/IndividualTS.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IndividualTS\": () => (/* binding */ IndividualTS)\n/* harmony export */ });\n/* harmony import */ var _GA_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GA/index */ \"./dist/GA/index.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Individual representing a set sequence of cities index\n */\nvar IndividualTS = /*#__PURE__*/function (_Individual) {\n  _inherits(IndividualTS, _Individual);\n  var _super = _createSuper(IndividualTS);\n  function IndividualTS() {\n    _classCallCheck(this, IndividualTS);\n    return _super.apply(this, arguments);\n  }\n  _createClass(IndividualTS, [{\n    key: \"random\",\n    value:\n    /**\n     * Creates individual genes randomly picking unique values in range [0..nCities]\n     */\n    function random() {\n      // Creates range of indices\n      var indices = [];\n      for (var i = 0; i < this.size; i++) {\n        indices.push(i);\n      }\n      for (var _i = 0; _i < this.size; _i++) {\n        // Splice random index from range and store it in genes array\n        this.genes[_i] = indices.splice(Math.floor(Math.random() * indices.length), 1)[0];\n      }\n    }\n    /**\n     * Creates two offspring sets of genes crossing two indivduals\n     * @param mate Individual to cross over with\n     * @returns two sets of genes\n     */\n  }, {\n    key: \"crossover\",\n    value: function crossover(mate) {\n      var genes1 = [];\n      var genes2 = [];\n      // Randomly choose pivot in range [1..nCities-2]\n      var pivot = Math.min(this.size - 2, Math.max(Math.floor(Math.random() * this.size), 1));\n      var selectedValues = this.genes.slice(0, pivot);\n      // Select values from [0...pivot] in this Individual's genes\n      // to fill first part of genes1\n      genes1.push.apply(genes1, _toConsumableArray(selectedValues));\n      // Select remaining values in mate genes preserving their order\n      // to fill second part of genes1\n      genes1.push.apply(genes1, _toConsumableArray(mate.genes.filter(function (g) {\n        return !selectedValues.includes(g);\n      })));\n      // Select the genes selected in first part of genes1 preserving their order in mate genes\n      // to fill first part of genes2 \n      genes2.push.apply(genes2, _toConsumableArray(mate.genes.filter(function (g) {\n        return selectedValues.includes(g);\n      })));\n      // Select values from [pivot...size] in the mate's genes\n      // to fill second part of genes2\n      genes2.push.apply(genes2, _toConsumableArray(this.genes.slice(pivot, this.size)));\n      return [genes1, genes2];\n    }\n  }]);\n  return IndividualTS;\n}(_GA_index__WEBPACK_IMPORTED_MODULE_0__.Individual);\n\n//# sourceURL=webpack://genetic-algorithm/./dist/TravellingSalesman/IndividualTS.js?");

/***/ }),

/***/ "./dist/TravellingSalesman/PopulationTS.js":
/*!*************************************************!*\
  !*** ./dist/TravellingSalesman/PopulationTS.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PopulationTS\": () => (/* binding */ PopulationTS)\n/* harmony export */ });\n/* harmony import */ var _GA_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GA/index */ \"./dist/GA/index.js\");\n/* harmony import */ var _IndividualTS__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./IndividualTS */ \"./dist/TravellingSalesman/IndividualTS.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n/**\n * Population representing solutions to the Traveling Salesman Problem\n */\nvar PopulationTS = /*#__PURE__*/function (_Population) {\n  _inherits(PopulationTS, _Population);\n  var _super = _createSuper(PopulationTS);\n  /**\n   * Instantiates a new population to solve a set of cities\n   * @param individualCount Number of individuals in the population\n   * @param cities Set of cities coordinates to visit\n   */\n  function PopulationTS(individualCount, cities) {\n    var _this;\n    _classCallCheck(this, PopulationTS);\n    _this = _super.call(this, individualCount, cities.length, _IndividualTS__WEBPACK_IMPORTED_MODULE_1__.IndividualTS);\n    _this.cities = cities;\n    return _this;\n  }\n  /**\n   * Computes distance between two cities\n   * @param id1 Index of first city\n   * @param id2 Index of second city\n   * @returns Distance from first to second city\n   */\n  _createClass(PopulationTS, [{\n    key: \"getDistance\",\n    value: function getDistance(id1, id2) {\n      // Gets the cities to compute the distance from\n      var city1 = this.cities[id1];\n      var city2 = this.cities[id2];\n      // Distance is the hypothenus of the right triangle formed by points :\n      //     A[c1.x, c1.y], B[c2.x, c1.y], C[c2.x, c2.y] \n      var distance = Math.hypot(city2[0] - city1[0], city2[1] - city1[1]);\n      return distance;\n    }\n    /**\n     * Computes the individuals fitness\n     * An individual fitness is the total distance taken to visit all cities\n     * only once and loop back to the starting city\n     * @returns Individuals with updated fitness\n     */\n  }, {\n    key: \"evaluate\",\n    value: function evaluate() {\n      this.averageFitness = 0;\n      for (var i = 0; i < this.individuals.length; i++) {\n        this.individuals[i].fitness = 0;\n        // Sums distances between cities according to individual's genes\n        for (var j = 0; j < this.individualSize - 1; j++) {\n          this.individuals[i].fitness += this.getDistance(this.individuals[i].genes[j], this.individuals[i].genes[j + 1]);\n        }\n        // Adds the distance from last to first city that closes the loop\n        this.individuals[i].fitness += this.getDistance(0, this.individualSize - 1);\n        // Adds individual fitness to average\n        this.averageFitness += this.individuals[i].fitness;\n      }\n      // Averages population's fitness\n      this.averageFitness /= this.individuals.length;\n      return this.individuals;\n    }\n    /**\n     * Sorts individual by fitness and only keep the fittest ones\n     * to keep individuals count constant\n     */\n  }, {\n    key: \"cull\",\n    value: function cull() {\n      this.individuals.sort(function (a, b) {\n        return b.fitness - a.fitness;\n      });\n      this.individuals.splice(0, this.individualCount);\n    }\n    /**\n     * Mutates individual according to a hardcoded probability.\n     * Swaps two indices in the individual's genes if he does mutate.\n     * TODO -- Create a config file to store the algorithm metadata\n     * @returns Mutated individuals\n     */\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      for (var i = 0; i < this.individualCount; i++) {\n        if (Math.random() < 0.1) {\n          // Randomly picks two different indices\n          var _ref = [Math.floor(Math.random() * this.individualSize), Math.floor(Math.random() * this.individualSize)],\n            rand1 = _ref[0],\n            rand2 = _ref[1];\n          while (rand1 == rand2) {\n            rand2 = Math.floor(Math.random() * this.individualSize);\n          }\n          // Swaps genes\n          var _ref2 = [this.individuals[i][rand2], this.individuals[i][rand1]];\n          this.individuals[i][rand1] = _ref2[0];\n          this.individuals[i][rand2] = _ref2[1];\n        }\n      }\n      return this.individuals;\n    }\n  }]);\n  return PopulationTS;\n}(_GA_index__WEBPACK_IMPORTED_MODULE_0__.Population);\n\n//# sourceURL=webpack://genetic-algorithm/./dist/TravellingSalesman/PopulationTS.js?");

/***/ }),

/***/ "./dist/TravellingSalesman/Renderer.js":
/*!*********************************************!*\
  !*** ./dist/TravellingSalesman/Renderer.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Renderer\": () => (/* binding */ Renderer)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar Renderer = /*#__PURE__*/function () {\n  /**\n   * Instantiates a renderer\n   * @param canvasId Id of the canvas used to render\n   */\n  function Renderer(canvasId) {\n    _classCallCheck(this, Renderer);\n    this.canvas = document.getElementById(canvasId);\n    this.ctx = this.canvas.getContext('2d');\n    this.canvasW = this.canvas.width;\n    this.canvasH = this.canvas.height;\n    this.cityRadius = 5;\n    this.cityFill = \"white\";\n    this.cityStroke = \"white\";\n    this.geneStroke = \"rgba(125,180,255,0.1)\";\n    this.fittestStroke = \"blue\";\n    this.strokeStyle = this.geneStroke;\n    this.lineWidth = 1;\n  }\n  /** Clears canvas */\n  _createClass(Renderer, [{\n    key: \"clear\",\n    value: function clear() {\n      this.ctx.clearRect(0, 0, this.canvasW, this.canvasH);\n    }\n    /**\n     * Draws a line between two city points\n     * @param x1 x coord of first city\n     * @param y1 y coord of first city\n     * @param x2 x coord of second city\n     * @param y2 y coord of second city\n     */\n  }, {\n    key: \"drawLine\",\n    value: function drawLine(x1, y1, x2, y2) {\n      this.ctx.moveTo(x1, y1);\n      this.ctx.lineTo(x2, y2);\n    }\n    /**\n     * Draws a circle to render a city\n     * @param x x coordinate of city\n     * @param y y coordinate of city\n     * @param r radius of city\n     */\n  }, {\n    key: \"drawCircle\",\n    value: function drawCircle(x, y, r) {\n      this.ctx.moveTo(x + r, y);\n      this.ctx.arc(x, y, r, 0, Math.PI * 2);\n    }\n    /**\n     * Draws all lines formed by fittest pairs of points\n     * @param genes genes composing the individual\n     */\n  }, {\n    key: \"drawFittest\",\n    value: function drawFittest(genes) {\n      this.lineWidth = 5;\n      this.strokeStyle = this.fittestStroke;\n      this.drawGenes(genes);\n      this.strokeStyle = this.geneStroke;\n      this.lineWidth = 1;\n    }\n    /**\n     * Draws all lines formed by pair of points\n     * @param genes genes composing the whole population\n     */\n  }, {\n    key: \"drawGenes\",\n    value: function drawGenes(genes) {\n      this.ctx.strokeStyle = this.strokeStyle;\n      this.ctx.lineWidth = this.lineWidth;\n      this.ctx.beginPath();\n      for (var i = 0; i < genes.length; i++) {\n        this.drawLine(genes[i][0], genes[i][1], genes[i][2], genes[i][3]);\n      }\n      this.ctx.stroke();\n    }\n    /**\n     * Draws an array of cities\n     * @param cities cities to render\n     */\n  }, {\n    key: \"drawCities\",\n    value: function drawCities(cities) {\n      this.ctx.fillStyle = this.cityFill;\n      this.ctx.strokeStyle = this.cityStroke;\n      this.ctx.lineWidth = this.lineWidth;\n      this.ctx.beginPath();\n      for (var i = 0; i < cities.length; i++) {\n        this.drawCircle(cities[i][0], cities[i][1], this.cityRadius);\n      }\n      this.ctx.fill();\n      this.ctx.stroke();\n    }\n  }]);\n  return Renderer;\n}();\n\n//# sourceURL=webpack://genetic-algorithm/./dist/TravellingSalesman/Renderer.js?");

/***/ }),

/***/ "./dist/index.js":
/*!***********************!*\
  !*** ./dist/index.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _TravellingSalesman_App__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TravellingSalesman/App */ \"./dist/TravellingSalesman/App.js\");\n\nfunction main() {\n  var app = new _TravellingSalesman_App__WEBPACK_IMPORTED_MODULE_0__.App(\"canvas\", 20);\n  app.run();\n}\nmain();\n\n//# sourceURL=webpack://genetic-algorithm/./dist/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./dist/index.js");
/******/ 	
/******/ })()
;